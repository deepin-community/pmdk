.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "PMEM2_SOURCE_GET_HANDLE" "3" "2021-09-24" "PMDK - pmem2 API version 1.0" "PMDK Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-3-Clause
.\" Copyright 2020, Intel Corporation
.SH NAME
.PP
\f[B]pmem2_source_get_handle\f[]() \- reads file handler of the data
source
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmem2.h>

int\ pmem2_source_get_handle(const\ struct\ pmem2_source\ *src,\ HANDLE\ *h);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmem2_source_get_handle\f[]() function reads the file handler
of *struct pmem2_source** object describing the data source and returns
it by \f[I]h\f[] parameter.
.PP
This function is Windows only, on Linux use
\f[B]pmem2_source_get_fd\f[](3).
If the source was created using \f[B]pmem2_source_from_fd\f[](3) then
\f[B]pmem2_source_get_handle\f[]() is also valid function to read
handler, because file descriptor is converted to file handle during
source creation.
.PP
However, there are limitations to what you can do with a handle created
from a file descriptor.
For details refer to \f[B]DESCRIPTION\f[] section in the
\f[B]pmem2_source_from_fd\f[](3) manpage.
.SH ERRORS
.PP
The \f[B]pmem2_source_get_handle\f[]() can fail with the following
errors:
.IP \[bu] 2
\f[B]PMEM2_E_FILE_HANDLE_NOT_SET\f[] \- in case of an instance of
\f[I]struct pmem2_source\f[] that does not come from source type that
support file handles, eg.
anonymous data source.
.SH RETURN VALUE
.PP
The \f[B]pmem2_source_get_handle\f[]() returns a file handle of data
source.
.SH SEE ALSO
.PP
\f[B]pmem2_source_from_fd\f[](3), \f[B]pmem2_source_get_fd\f[](3),
\f[B]libpmem2\f[](7) and \f[B]<https://pmem.io>\f[]
