.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "PMEM2_SOURCE_NUMA_NODE" "3" "2021-09-24" "PMDK - pmem2 API version 1.0" "PMDK Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-3-Clause
.\" Copyright 2020, Intel Corporation
.SH NAME
.PP
\f[B]pmem2_source_numa_node\f[]() \- returns data source numa node
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmem2.h>

struct\ pmem2_source;
int\ pmem2_source_numa_node(const\ struct\ pmem2_source\ *source,\ int\ *numa_node);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmem2_source_numa_node\f[]() function retrieves the numa node
of the given data source.
The numa node can be used to, e.g., pin threads to near\-memory cores.
The numa node is stored in \f[I]*numa_node\f[].
It is the same value that is shown as \f[C]numa_node\f[] in
\f[C]ndctl\ list\ \-v\f[].
.SH RETURN VALUE
.PP
The \f[B]pmem2_source_numa_node\f[]() function returns 0 on success.
If the function fails, the \f[I]*numa_node\f[] variable is left
unmodified and a negative error code is returned.
.SH ERRORS
.PP
The \f[B]pmem2_source_numa_node\f[]() can fail with the following
errors:
.PP
On all systems:
.IP \[bu] 2
\f[B]PMEM2_E_NOSUPP\f[] \- source type or operating system not supported
(see #caveats for details.)
.PP
on Linux:
.IP \[bu] 2
\f[B]PMEM2_E_DAX_REGION_NOT_FOUND\f[] \- no \f[B]ndctl_region\f[] could
be determined for the source.
.IP \[bu] 2
\f[B]PMEM2_E_INVALID_FILE_TYPE\f[] \- if the source points to a
directory.
.IP \[bu] 2
\-\f[B]errno\f[] set by failing \f[B]ndctl_new\f[], while trying to
create a new context.
.SH CAVEATS
.PP
This call requires \f[B]libndctl\f[] to retrieve the numa information.
It only works for sources that are actually located on persistent
memory, i.e., devdax or fsdax.
As anonymous sources are not backed by files on persistent memory, this
method is not supported for them.
It also does not work under Windows or systems without
\f[B]libndctl\f[].
.SH SEE ALSO
.PP
\f[B]errno\f[](3), \f[B]ndctl_new\f[](3),
\f[B]pmem2_source_from_handle\f[](3), \f[B]pmem2_source_from_fd\f[](3),
\f[B]libpmem2\f[](7), \f[B]libndctl\f[](7) and
\f[B]<https://pmem.io>\f[]
