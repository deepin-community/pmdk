.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "PMEMSET_DEEP_FLUSH" "3" "2021-09-24" "PMDK - pmemset API version 1.0" "PMDK Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-3-Clause
.\" Copyright 2021, Intel Corporation
.SH NAME
.PP
\f[B]pmemset_deep_flush\f[]() \- performs deep flush on the range
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmemset.h>

int\ pmemset_deep_flush(struct\ pmemset\ *set,\ const\ void\ *ptr,\ size_t\ size);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmemset_deep_flush\f[]() function forces any changes in the
range [ptr, ptr+size) from the \f[I]set\f[] to be stored durably in the
most reliable persistence domain available to software.
In particular, on supported platforms, this enables the code not to rely
on automatic cache or WPQ (write pending queue) flush on power failure
(ADR/eADR).
.PP
Since this operation is usually much more expensive than regular
persist, it should be used sparingly.
Typically, the application should only ever use this function as a
precaution against hardware failures, e.g., in code that detects silent
data corruption caused by unsafe shutdown.
.SH RETURN VALUE
.PP
The \f[B]pmemset_deep_flush\f[]() function returns 0 on success or a
negative error code on failure.
.SH ERRORS
.PP
The \f[B]pmemset_deep_flush\f[]() can fail with the following errors:
.IP \[bu] 2
\f[B]PMEMSET_E_DEEP_FLUSH_FAIL\f[] \- the underlying device region id
cannot be detected or cannot perform msync on a regular DAX volume.
.SH SEE ALSO
.PP
\f[B]pmem2_get_persist_fn\f[](3), \f[B]libpmemset\f[](7),
\f[B]libpmem2\f[](7), and \f[B]<https://pmem.io>\f[]
