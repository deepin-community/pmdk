.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "PMEMSET_FLUSH" "3" "2021-09-24" "PMDK - pmemset API version 1.0" "PMDK Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-3-Clause
.\" Copyright 2021, Intel Corporation
.SH NAME
.PP
\f[B]pmemset_flush\f[]() \- flushes data from the range
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmemset.h>

int\ pmemset_flush(struct\ pmemset\ *set,\ const\ void\ *ptr,\ size_t\ size);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmemset_flush\f[]() function efficiently flushes data from
\f[I]set\f[] in the range [ptr, ptr + size].
The \f[B]pmemset_flush\f[]() function automatically decides what is the
most appropriate mechanism for flushing stores directly to underlying
storage.
Based on \f[I]granularity\f[] value of the \f[I]set\f[] and available
platform, \f[B]pmemset_flush\f[]() will use system API calls such as
msync(), fsync() on Linux, or FlushFileBuffers(), FlushViewOfFile() on
Windows to flush data.
Depending on the architecture and \f[I]power\-fail protected domain\f[],
\f[B]pmemset_flush\f[]() function can also call machine instructions for
flushing cache lines in more reliably way (e.g., CLWB, CLFLUSHOPT,
CLFLUSH for Intel x86_64 architecture).
.RS
.PP
NOTE: For more detailed information about \f[I]granularity\f[] and
possible flushing operation please see \f[I]GRANULARITY\f[] section in
the \f[B]libpmem2\f[](7) man page.
.RE
.RS
.PP
NOTE: In the underlying implementation \f[B]pmemset_flush\f[]() uses
\f[I]pmem2_flush_fn\f[] returned by \f[B]pmemset_get_flush_fn\f[](3), so
all flush principles are identical for \f[B]pmemset_flush\f[]()
function, and you can find them in the \f[B]pmem2_get_flush_fn(3)\f[]
man page.
.RE
.SH RETURN VALUE
.PP
The \f[B]pmemset_flush\f[]() function always returns 0.
.SH SEE ALSO
.PP
\f[B]pmem2_get_flush_fn\f[](3), \f[B]libpmemset\f[](7),
\f[B]libpmem2\f[](7), and \f[B]<https://pmem.io>\f[]
