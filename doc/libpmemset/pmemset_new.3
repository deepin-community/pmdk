.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "PMEMSET_NEW" "3" "2021-09-24" "PMDK - pmemset API version 1.0" "PMDK Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-3-Clause
.\" Copyright 2020, Intel Corporation
.SH NAME
.PP
\f[B]pmemset_new\f[](), \f[B]pmemset_delete\f[]() \- allocate and free a
structure for a pmemset object
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmemset.h>

struct\ pmemset;
struct\ pmemset_config;
int\ pmemset_new(struct\ pmemset\ **set,\ struct\ pmemset_config\ *cfg);
int\ pmemset_delete(struct\ pmemset\ **set);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmemset_new\f[]() function creates a new set by allocating and
initializing set structure, \f[I]pmemset\f[], and returns it through the
pointer in \f[I]*set\f[].
Configuration data, passed by the \f[I]*cfg\f[], is copied into the set
structure.
.PP
The \f[B]pmemset_delete\f[]() function frees \f[I]*set\f[] returned by
\f[B]pmemset_new\f[]() and sets \f[I]*set\f[] to NULL.
If \f[I]*set\f[] is NULL, no operation is performed.
.SH RETURN VALUE
.PP
The \f[B]pmemset_new\f[]() function returns 0 on success or a negative
error code on failure.
\f[B]pmemset_new\f[]() does set \f[I]*set\f[] to NULL on failure.
.PP
The \f[B]pmemset_delete\f[]() function always returns 0.
.SH ERRORS
.PP
\f[B]pmemset_new\f[]() can fail with the following error: \-
\f[B]\-ENOMEM\f[] \- out of memory
.SH SEE ALSO
.PP
\f[B]errno\f[](3), \f[B]pmemset_config_new\f[](3),
\f[B]libpmemset\f[](7) and \f[B]<http://pmem.io>\f[]
